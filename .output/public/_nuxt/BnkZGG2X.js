import{L as O,M as u,r as D,N as B,O as M,P as R,Q as S,R as E,v as H,S as P,T as V,U as N,u as w}from"./djsuzeVp.js";const T=r=>r==="defer"||r===!1;function U(...r){var g;const n=typeof r[r.length-1]=="string"?r.pop():void 0;typeof r[0]!="string"&&r.unshift(n);let[t,f,a={}]=r;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof f!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const e=O(),C=f,b=()=>u.value,p=()=>e.isHydrating?e.payload.data[t]:e.static.data[t];a.server??(a.server=!0),a.default??(a.default=b),a.getCachedData??(a.getCachedData=p),a.lazy??(a.lazy=!1),a.immediate??(a.immediate=!0),a.deep??(a.deep=u.deep),a.dedupe??(a.dedupe="cancel");const d=a.getCachedData(t,e),_=d!=null;if(!e._asyncData[t]||!a.immediate){(g=e.payload._errors)[t]??(g[t]=u.errorValue);const i=a.deep?D:B;e._asyncData[t]={data:i(_?d:a.default()),pending:D(!_),error:M(e.payload._errors,t),status:D("idle"),_default:a.default}}const s={...e._asyncData[t]};delete s._default,s.refresh=s.execute=(i={})=>{if(e._asyncDataPromises[t]){if(T(i.dedupe??a.dedupe))return e._asyncDataPromises[t];e._asyncDataPromises[t].cancelled=!0}if(i._initial||e.isHydrating&&i._initial!==!1){const l=i._initial?d:a.getCachedData(t,e);if(l!=null)return Promise.resolve(l)}s.pending.value=!0,s.status.value="pending";const o=new Promise((l,c)=>{try{l(C(e))}catch(y){c(y)}}).then(async l=>{if(o.cancelled)return e._asyncDataPromises[t];let c=l;a.transform&&(c=await a.transform(l)),a.pick&&(c=z(c,a.pick)),e.payload.data[t]=c,s.data.value=c,s.error.value=u.errorValue,s.status.value="success"}).catch(l=>{if(o.cancelled)return e._asyncDataPromises[t];s.error.value=N(l),s.data.value=w(a.default()),s.status.value="error"}).finally(()=>{o.cancelled||(s.pending.value=!1,delete e._asyncDataPromises[t])});return e._asyncDataPromises[t]=o,e._asyncDataPromises[t]},s.clear=()=>j(e,t);const h=()=>s.refresh({_initial:!0}),m=a.server!==!1&&e.payload.serverRendered;{const i=R();if(i&&m&&a.immediate&&!i.sp&&(i.sp=[]),i&&!i._nuxtOnBeforeMountCbs){i._nuxtOnBeforeMountCbs=[];const c=i._nuxtOnBeforeMountCbs;S(()=>{c.forEach(y=>{y()}),c.splice(0,c.length)}),E(()=>c.splice(0,c.length))}m&&e.isHydrating&&(s.error.value||d!=null)?(s.pending.value=!1,s.status.value=s.error.value?"error":"success"):i&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?i._nuxtOnBeforeMountCbs.push(h):a.immediate&&h();const o=V();if(a.watch){const c=H(a.watch,()=>s.refresh());o&&P(c)}const l=e.hook("app:data:refresh",async c=>{(!c||c.includes(t))&&await s.refresh()});o&&P(l)}const v=Promise.resolve(e._asyncDataPromises[t]).then(()=>s);return Object.assign(v,s),v}function j(r,n){n in r.payload.data&&(r.payload.data[n]=void 0),n in r.payload._errors&&(r.payload._errors[n]=u.errorValue),r._asyncData[n]&&(r._asyncData[n].data.value=w(r._asyncData[n]._default()),r._asyncData[n].error.value=u.errorValue,r._asyncData[n].pending.value=!1,r._asyncData[n].status.value="idle"),n in r._asyncDataPromises&&(r._asyncDataPromises[n]&&(r._asyncDataPromises[n].cancelled=!0),r._asyncDataPromises[n]=void 0)}function z(r,n){const t={};for(const f of n)t[f]=r[f];return t}export{U as u};
